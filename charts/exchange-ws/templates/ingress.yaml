# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ .Release.Name }}-ig
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
#     nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
#     nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
#     nginx.ingress.kubernetes.io/proxy-redirect-from: "http"
#     nginx.ingress.kubernetes.io/proxy-redirect-to: "http"
#     nginx.ingress.kubernetes.io/proxy-body-size: "100m"
#     nginx.ingress.kubernetes.io/proxy-buffering: "off"
#     nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
#     nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
#     nginx.ingress.kubernetes.io/connection-upgrade: "true"
#     nginx.ingress.kubernetes.io/websocket-services: "{{ .Release.Name }}"
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: hihi.itmosvn.me
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: {{ .Release.Name }}
#                 port:
#                   number: 3000
#           - path: /ws
#             pathType: Prefix
#             backend:
#               service:
#                 name: {{ .Release.Name }}
#                 port:
#                   name: ws-3003
#                   number: 3003